{"version":3,"sources":["webpack:///webpack/bootstrap 1c6338a999e4497edf31","webpack:///./src/MapPart.js","webpack:///./src/autoLabeler.js","webpack:///./src/DOMEssentials.js","webpack:///./src/geomEssentials.js","webpack:///./src/third_party/GreinerHormann/src/greiner-hormann.js","webpack:///./src/third_party/GreinerHormann/src/clip.js","webpack:///./src/third_party/GreinerHormann/src/polygon.js","webpack:///./src/third_party/GreinerHormann/src/vertex.js","webpack:///./src/third_party/GreinerHormann/src/intersection.js","webpack:///./src/simulatedAnnealing.js","webpack:///./src/autoLabelManager.js","webpack:///./src/CandidateGenerator.js","webpack:///./src/LabelItem.js","webpack:///./src/DataReader.js","webpack:///./src/featureGenerator.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/index.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/ieee754/index.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/isarray/index.js","webpack:///./src/third_party/clone/clone.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,uEAAsE,iBAAiB,kBAAkB,EAAE;AAC3G;AACA,yDAAwD;AACxD;AACA;AACA,MAAK;;AAEL;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,QAAO;;AAEP,EAAC;;;;;;;AC5ED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,oCAAmC;AACnC,kDAAiD;AACjD,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,sBAAsB;AAChE,yCAAwC,sBAAsB;AAC9D;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,kBAAkB;AAChF,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,kCAAiC;AACjC;;AAEA;AACA;AACA,mDAAkD;;AAElD;AACA;AACA,oDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,0CAAyC,kDAAkD;AAC3F;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,wDAAuD;AACvD,0BAAyB;AACzB,mCAAkC;AAClC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,kDAAkD;AAC/D;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC7NA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAU,cAAc;AACxB,aAAY;AACZ;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB,aAAY,SAAS;AACrB;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnDA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,WAAU,MAAM;AAChB,aAAY,MAAM;AAClB;AACA;AACA;AACA,iBAAgB,kBAAkB;AAClC;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA,+BAA8B;AAC9B;AACA,IAAG;;AAEH;AACA;AACA,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,iBAAgB,QAAQ;AACxB,iBAAgB,QAAQ;AACxB,mBAAkB,OAAO;AACzB;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,aAAY,QAAQ;AACpB,aAAY,QAAQ;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,QAAQ;AAClB,aAAY;AACZ;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,QAAQ;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,WAAU,MAAM;AAChB,WAAU,OAAO;AACjB,aAAY,MAAM;AAClB;AACA,gDAA+C;AAC/C;AACA,iBAAgB,oBAAoB;AACpC;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,QAAO;AACP,+CAA8C;AAC9C;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,OAAO;AACjB,WAAU,MAAM;AAChB,WAAU,MAAM;AAChB,aAAY,MAAM;AAClB;AACA;AACA;AACA,iBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,WAAU,MAAM;AAChB,WAAU,MAAM;AAChB,WAAU,OAAO;AACjB;AACA;AACA,gDAA+C;AAC/C;AACA;AACA,iBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB,WAAU,MAAM;AAChB,WAAU,MAAM;AAChB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,UAAU,KAAK;AACxC;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB,WAAU,UAAU;AACpB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,MAAM;AAChB;AACA;AACA,iBAAgB,oBAAoB;AACpC;AACA,IAAG;;AAEH;AACA;AACA,SAAQ,MAAM;AACd,SAAQ,MAAM;AACd,WAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,wBAAuB;AACvB,IAAG;;AAEH;AACA;AACA;AACA,WAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,qBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA,YAAW;AACX,YAAW;AACX,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C,IAAG;;AAEH;AACA;AACA;AACA,WAAU,MAAM;AAChB,WAAU,MAAM;AAChB,WAAU,MAAM;AAChB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,MAAM;AAChB,WAAU,MAAM;AAChB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,iBAAgB,cAAc;AAC9B,+D;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,MAAM;AAChB,WAAU,MAAM;AAChB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,cAAc;AAC9B,2BAA0B;AAC1B;AACA;AACA,IAAG;;AAEH;AACA,WAAU,SAAS;AACnB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB,WAAU,SAAS;AACnB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClbA;;AAEA;AACA;AACA;AACA,iBAAgB,qCAAqC;AACrD,iBAAgB,qCAAqC;AACrD,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,iBAAgB,qCAAqC;AACrD,iBAAgB,qCAAqC;AACrD,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,iBAAgB,qCAAqC;AACrD,iBAAgB,qCAAqC;AACrD,iBAAgB;AAChB;AACA;AACA;AACA,MAAK;;AAEL;AACA;;;;;;;AClCA;;AAEA;AACA;AACA;AACA,aAAY,uBAAuB;AACnC,aAAY,uBAAuB;AACnC,aAAY,QAAQ;AACpB,aAAY,QAAQ;AACpB,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACjBA;AACA;;AAEA;AACA;AACA,YAAW,uBAAuB;AAClC,YAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA,wDAAuD;AACvD,eAAc;AACd;AACA;AACA;AACA;;AAEA,oCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC/RA;AACA;AACA;AACA,YAAW,sBAAsB;AACjC,YAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;;;;;;AC1IA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;AC3DA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,wEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,wEAAwE,KAAK;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA,gDAA+C;AAC/C;AACA,uBAAsB;AACtB;AACA,iCAAgC;AAChC;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,8FAA6F;AAC7F;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,wCAAuC;AACvC;AACA,MAAK;;AAEL;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB;AACA;AACA,wCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;ACjIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA,iDAAgD;AAChD;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,aAAY,MAAM,2BAA2B,OAAO;AACpD,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA,mBAAkB,oBAAoB;AACtC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,MAAM;AAClB,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,aAAY,OAAO;AACnB,aAAY,MAAM;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1HA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA,WAAU,UAAU;AACpB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,SAAS;AACnB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,OAAO;AACjB,aAAY,kBAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;AC3DA;AACA;AACA;;AAEA;;AAEA,iCAAgC;;AAEhC;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,4BAA2B,4BAA4B,4BAA4B,+BAA+B;AAClH;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,+BAA+B;AAC/C;AACA;AACA;AACA,IAAG;;AAEH;AACA,gCAA+B;AAC/B,oBAAmB;AACnB;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH,uBAAsB,2BAA2B;;AAEjD;AACA;AACA,WAAU,OAAO;AACjB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA,WAAU,OAAO;AACjB,WAAU,OAAO;AACjB,WAAU,QAAQ;AAClB,WAAU,QAAQ;AAClB;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,eAAc,OAAO;AACrB,eAAc,UAAU;AACxB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;;;;;;ACnNA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAmD,GAAG,0BAA0B,+BAA+B;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,WAAU,MAAM;AAChB,WAAU,IAAI,yBAAyB,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;;AC5EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,iBAAgB,SAAS;AACzB;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB,eAAe;AACvC;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,yBAAwB,QAAQ;AAChC;AACA,sBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,oBAAmB,cAAc;AACjwDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA,IAAG;AACH;AACA,gBAAe,SAAS;AACxB;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC5vDA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qCAAoC,SAAS;AAC7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAQ,WAAW;;AAEnB;AACA;AACA;AACA,SAAQ,WAAW;;AAEnB;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,SAAQ,WAAW;;AAEnB;AACA;AACA,SAAQ,UAAU;;AAElB;AACA;;;;;;;ACnFA,kBAAiB;;AAEjB;AACA;AACA;;;;;;;ACJA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT,QAAO;AACP,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;AAED;AACA;AACA","file":"l.autolabelSA.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1c6338a999e4497edf31\n **/","(function () {\r\n  \"use strict\";\r\n\r\n  var autoLabeler = require('./autoLabeler.js');\r\n\r\n  var __onRemove = L.LayerGroup.prototype.onRemove;\r\n  //\r\n  // var geomEssentials = require(\"./geomEssentials.js\");\r\n  //\r\n  // var poly1 =[[195.28215910639838,47.1410795531992],[231,65],[261,9],[273.7383792229255,15.079680992759897],[297.859236050962,-35.4592571231262],[236.8793791587075,-64.56327973079307],[207.3470977755445,-9.43635448222185],[220.326120454396,-2.946843142796098]];\r\n  //\r\n  // var poly2 =[[407.0824120592751,-65.5164843828588],[302,-82],[291.5910849433034,-86.16356602267865],[270.7932070674736,-34.16887133310413],[287.07399919130665,-27.65655448357095],[398.40421700394324,-10.192990905118151]];\r\n  //\r\n  // var poly3 = geomEssentials.clipPoly(poly1,poly2);\r\n  //\r\n  // console.log(poly3);\r\n  //to include in LabelGroup\r\n  var AutoLabelingSupport = {\r\n      /**\r\n      handle removing layer from the map\r\n      */\r\n    onRemove: function (map) {\r\n      this.disableAutoLabel();\r\n        __onRemove.call(this, map);\r\n    },\r\n\r\n\r\n    /**\r\n     enable autolabeling for this layerGroup, additionally set the current_map variable if it is undefined and hooks label painting on moveend /zoomend events\r\n     it adds this layerGroup to the _layers2label array, so _doAutoLabel function will know about this layerGroup\r\n     @param {Object} options: labelStyle - css string to describe labels look, for now one for all layers in group, propertyName - a property from layer.feature.properties which we label on map\r\n    */\r\n    enableAutoLabel:function(options){\r\n      if(!this._map)return;\r\n      if(!this._map.autoLabeler)return;\r\n      this._al_options = options || {};\r\n      this._al_options.labelStyle = options.labelStyle || \"fill: lime; stroke: #000000;  font-size: 20px;\"; //TODO [enableAutoLabel] add ability to set unique style for each feature\r\n      this._al_options.propertyName = options.propertyName || \"name\";\r\n      this._al_options.priority = options.priority || 0; //highest\r\n      this._al_options.zoomToStartLabel = options.zoomToStartLabel || this._map.autoLabeler.options.zoomToStartLabel;\r\n      this._map.autoLabeler.addLayer(this);\r\n    },\r\n\r\n    /**\r\n    Obtain autlabelling state for this layerGroup\r\n    @returns {Boolean}\r\n    */\r\n    autoLabelEnabled:function(){\r\n      if(!this._map.autoLabeler)return false;\r\n      return this._map.autoLabeler.hasLayer(this);\r\n    },\r\n\r\n    /**\r\n    disable autolabelling\r\n    */\r\n    disableAutoLabel:function(){\r\n      if(!this._map.autoLabeler){\r\n        delete this._al_options;\r\n        return;\r\n      }\r\n      if(this._map.autoLabeler.remLayer(this)){\r\n        delete this._al_options;\r\n      }\r\n    }\r\n  }\r\n\r\n  L.LayerGroup.include(AutoLabelingSupport);\r\n\r\n  L.Map.addInitHook(function () {\r\n          this.whenReady(function () {\r\n              if (this.options.autolabel) {\r\n                this.autoLabeler = L.autoLabeler(this,this.options.autolabelOptions)\r\n              }\r\n          });\r\n      });\r\n\r\n})();\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/MapPart.js\n ** module id = 0\n ** module chunks = 0\n **/","var DOMEssentials = require('./DOMEssentials.js');\r\nvar geomEssentials = require('./geomEssentials.js');\r\nvar simulatedAnnealing = require('./simulatedAnnealing.js');\r\nvar autoLabelManager =require(\"./autoLabelManager.js\");\r\nvar dataReader = require('./DataReader.js');\r\nvar fgenerator = require('./featureGenerator.js');\r\n\r\nL.AutoLabeler = L.Evented.extend(\r\n {\r\n    _layers2label:[], //an array to know which layergroups are to label\r\n    options:{\r\n      showBBoxes:false, //display bounding boxes around texts\r\n      debug:true,//show debug info in hte cons\r\n      labelsDelay:1000,//a time after update event of renderer when labelling should start, if zero - errors while zooming\r\n      checkLabelsInside:true,//re-clip all segments to entirely fit map window without padding, disabling increases performance, but some labels maybe invisible due to padding of renderer\r\n      zoomToStartLabel:13,//if map zoom lev is below this, do not show labels\r\n      minimizeTotalOverlappingArea:false, //if true, minimize not the count of overlapping labels, but instead their total overlapping area\r\n      deleteIfNoSolution:false,//TODO [setAutoLabelOptions] if no solution can be achieivd, delete some of the labels, which are overlapping, based on their layer al_options.priority or random if equal\r\n      doNotShowIfSegIsTooSmall:false, //TODO [setAutoLabelOptions] if segment length is less then textlength of text, do not show this text\r\n      annealingOptions:{}\r\n    }, //autolabel options\r\n\r\n    _autoLabel:false, //to determine if autolabelling is set for this map\r\n\r\n    initialize: function (map, options) {\r\n      L.setOptions(this, options);\r\n      this._map=map;\r\n      fgenerator._map = map;\r\n      fgenerator.createLayers();\r\n    },\r\n\r\n    hasLayer:function(layer){\r\n      return this._layers2label.indexOf(layer)!=-1;\r\n    },\r\n\r\n    addLayer:function(layer){\r\n      if(!this.hasLayer(layer))this._layers2label.push(layer);\r\n    },\r\n\r\n    remLayer:function(layer){\r\n      var ind=this._layers2label.indexOf(layer);\r\n      if(ind>=0){\r\n        this._layers2label.splice(ind,1);\r\n      }\r\n      return ind>=0;\r\n    },\r\n\r\n    /**\r\n    toggles autolabeling\r\n    */\r\n    toggleAutoLabelling:function(){ //this not tested yet\r\n      if(this._autoLabel)this.disableAutoLabel();else this.enableAutoLabel();\r\n    },\r\n\r\n    /**\r\n    enable autolabeling\r\n    */\r\n    enableAutoLabel:function(){\r\n      if(!this._map){\r\n        this._dodebug('no map attached');\r\n        return;\r\n      }\r\n      if(!this._map.options.renderer){\r\n        this._dodebug('renderer is invalid');\r\n        return;\r\n      }\r\n      this._map.options.renderer.on(\"update\",this._apply_doAutoLabel);\r\n      this._map.on(\"zoomstart\",function(){this._zoomstarttrig=1});\r\n      this._map.on(\"zoomend\",function(){this._zoomstarttrig=0});\r\n      this._autoLabel = true;\r\n    },\r\n\r\n    //to check if zoomstart event is fired to prevent autolabeling BEFORE zoomend\r\n    _zoomstarttrig:0,\r\n\r\n    //id of timeout after which AutoLabeling should be done each time - used to stop timer in case of changed map state BEFORE autolabelling was performed\r\n    _ctimerID:-1,\r\n\r\n    /**\r\n    disable autolabeling for this map\r\n    */\r\n    disableAutoLabel:function(){\r\n      this._map.options.renderer.off(\"update\",this._apply_doAutoLabel);\r\n      this._autoLabel=false;\r\n    },\r\n\r\n    /*\r\n    beacuse we using update event of renderer, here we switching to map context and handling two-time update event of SVG renderer\r\n    */\r\n    _apply_doAutoLabel:function(){\r\n      if(this._map.autoLabeler._ctimerID!=-1)clearTimeout(this._map.autoLabeler._ctimerID);\r\n      if(this._map.autoLabeler._zoomstarttrig==0){\r\n        var al = this._map.autoLabeler;\r\n        var lDelay = this._map.autoLabeler.options.labelsDelay;\r\n        this._map.autoLabeler._ctimerID=setTimeout(function(){al._doAutoLabel()},lDelay);\r\n      }else\r\n      this._map.autoLabeler._clearNodes();\r\n    },\r\n\r\n    _dodebug:function(message){\r\n      if(this.options.debug)console.log(message);\r\n    },\r\n\r\n    /**\r\n    this function obtains visible polyline segments from screen and computes optimal positions and draws labels on map\r\n    */\r\n    _doAutoLabel:function() {\r\n      if(!this._autoLabel)return; //nothing to do here\r\n      if(this._map.getZoom()>this.options.zoomToStartLabel){\r\n\r\n        fgenerator.setMapBounds();\r\n        fgenerator.genPoints(30,10);\r\n        fgenerator._pointsLayer.enableAutoLabel({});\r\n\r\n        dataReader._map=this._map;\r\n        var all_items  =dataReader.readDataToLabel(this._map) //array for storing paths and values\r\n        dataReader.prepareCollectedData(all_items,{maxlabelcount:80});\r\n        if(all_items.length==0){\r\n          this._clearNodes();\r\n          return;\r\n        }\r\n        var annMan = new autoLabelManager(all_items);\r\n        var annPerformer = new simulatedAnnealing(annMan,this.options.annealingOptions);\r\n        annPerformer.perform(this._renderNodes,this);\r\n        /*annMan.getInitialRandomState();\r\n        annPerformer.evaluateCurSet();\r\n        annMan.markOveralppedLabels(true);\r\n        this._renderNodes(annMan.curset);*/\r\n      }else{\r\n        this._clearNodes();\r\n      }\r\n    },\r\n\r\n    addPolyToLayer:function(poly,overlaps,data_to_show){\r\n      if(!this._polyLayer){\r\n        this._polyLayer = L.featureGroup().addTo(this._map)\r\n      }\r\n      var latlngs=[]; for(var i in poly)latlngs.push(this._map.layerPointToLatLng(\r\n        L.point(poly[i][0],poly[i][1])));\r\n      map_polygon = L.polygon([latlngs],{color:(overlaps)?'red':'yellow',fillOpacity:'0.5'});\r\n      map_polygon.data_to_show =data_to_show;\r\n      this._polyLayer.addLayer(map_polygon);\r\n    },\r\n\r\n    /**\r\n    clears label on the screen\r\n    */\r\n    _clearNodes:function() {\r\n      var svg = this._map.options.renderer._container,  //to work with SVG\r\n          i=svg.childNodes.length-1;\r\n      while(i>0){ //because 0 is for g\r\n        var node = svg.childNodes[i--];\r\n        if(node.id.search('auto_label')!==-1)svg.removeChild(node);\r\n      }\r\n      if(this._polyLayer){\r\n        this._map.removeLayer(this._polyLayer);\r\n        delete this._polyLayer;\r\n      }\r\n    },\r\n\r\n    /**\r\n    renders computed labelset on the screen via svg\r\n    */\r\n    _renderNodes:function(labelset){\r\n      var svg =  this._map.options.renderer._container;  //to work with SVG\r\n      this._clearNodes(); //clearscreen\r\n      var curID,cur_zero_offset=0; //for handling several parts path - to ensure we have label on each part of feature\r\n      for(var m in labelset){\r\n\r\n        var txNode = DOMEssentials.createSVGTextNode(\"\",labelset[m]._item.style);\r\n\r\n        switch (labelset[m]._item.layer_type()) {\r\n          case 0:\r\n            txNode.setAttribute('x', labelset[m].offset_or_origin.x);\r\n            txNode.setAttribute('y', labelset[m].offset_or_origin.y);\r\n            txNode.textContent = labelset[m]._item.text;\r\n            break;\r\n          case 1:{\r\n\r\n            if(!curID){\r\n              curID = labelset[m]._item.layer._path.id;\r\n            }else if(curID!==labelset[m]._item.layer._path.id){ //new feature -> start offset from 0\r\n              cur_zero_offset=0;\r\n              curID = labelset[m]._item.layer._path.id;\r\n            }else\r\n             cur_zero_offset+=labelset[m-1]._item.totalLength;\r\n            var cOffset =Math.round(cur_zero_offset+labelset[m].offset_or_origin);\r\n            var textPath = L.SVG.create('textPath');\r\n            textPath.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", '#'+curID);\r\n            textPath.setAttribute('startOffset',cOffset);\r\n            textPath.appendChild(document.createTextNode(labelset[m]._item.text));\r\n            txNode.appendChild(textPath);\r\n            break;\r\n          }\r\n        }\r\n\r\n        if(this.options.showBBoxes){\r\n           var poly = labelset[m]._item.getItemPoly();\r\n           if(labelset[m].wasSwapped)\r\n            labelset[m].offset_or_origin +\" poly: \" + JSON.stringify(labelset[m].poly());\r\n           this.addPolyToLayer(labelset[m].poly(),labelset[m].overlaps,labelset[m]._item.text);\r\n        }\r\n\r\n        labelset[m]._item.layer.feature.properties.alabel_offset=m+'__'+cOffset;\r\n\r\n        txNode.setAttribute('id','auto_label'+m);\r\n        svg.appendChild(txNode);\r\n      }\r\n      if(this.options.showBBoxes){\r\n        this._polyLayer.eachLayer(function(layer){\r\n            layer.on('click',function(e){\r\n              console.log(layer.data_to_show);\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\nL.autoLabeler = function(map,options){\r\n  return new L.AutoLabeler(map,options);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/autoLabeler.js\n ** module id = 1\n ** module chunks = 0\n **/","//a class to compute pixel dimensions of texts\r\n/** @namespace DOMEssentials*/\r\n'use strict';\r\nvar geomEssentials = require(\"./geomEssentials.js\");\r\n\r\nmodule.exports = {\r\n  /**\r\n  converts TextRectangle object to clockwise array of 2d-arrays, representing rectangular poly\r\n  @param {TextRectangle} rect: a bbox for text\r\n  @returns {Array}\r\n  @memberof DOMEssentials#\r\n  */\r\n  convertClientRectToArrayOfArrays:function(rect) {\r\n    var res=[];\r\n    var height_correction=rect.height*0.2; //beacuse getBoundingClientRect give a bit false height info\r\n    res.push([0,0]);\r\n    res.push([0,-rect.height]);\r\n    res.push([rect.width,-rect.height]);\r\n    res.push([rect.width,0]);\r\n    res=geomEssentials.movePolyByAdding(res,[0,height_correction]);\r\n    return res;\r\n  },\r\n\r\n  /**\r\n  returns a bounding box for horizontal text with style as in t.content_node\r\n  @param {Object} map: current map\r\n  @param {Object} node: textNode\r\n  @returns {L.Point} : a bbox for node, as width and height\r\n  @memberof DOMEssentials#\r\n  */\r\n  getBoundingBox:function(map,node){\r\n    var svg = map.options.renderer._container;\r\n    svg.appendChild(node);\r\n    var rect = node.getBoundingClientRect();\r\n    svg.removeChild(node);\r\n    return L.point(rect.width,-rect.height);\r\n  },\r\n\r\n  /**\r\n  creates SVG text node with specified style and handles some formatting issues\r\n  @param {String} text: text for node\r\n  @param {String} textstyle: CSS style String\r\n  @returns {TextNode} : SVG node\r\n  */\r\n  createSVGTextNode:function(text,textstyle){\r\n    text = text.replace(/ /g, '\\u00A0');  // Non breakable spaces\r\n    var node =L.SVG.create('text');\r\n    node.setAttribute('style',textstyle);\r\n    node.textContent = text;\r\n    return node;\r\n  }\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/DOMEssentials.js\n ** module id = 2\n ** module chunks = 0\n **/","//a class to perfrom geometric stuff\r\n/** @namespace geomEssentials*/\r\n'use strict';\r\n\r\nvar greinerHormann = require('./third_party/GreinerHormann');\r\n\r\nvar geomEssentials = {\r\n\r\n  /**\r\n  @param {Array} polyline: consists of L.Point\r\n  @returns {Array}: number array with length=polyline.length-1 with length of segs\r\n  */\r\n  computeSegmentsLengths:function(polyline){\r\n    var result=[];\r\n    for(var k=1;k<polyline.length;k++){\r\n      result.push(polyline[k].distanceTo(polyline[k-1]));\r\n    }\r\n    return result;\r\n  },\r\n\r\n  /**\r\n  translates segment to new loc by adding point to its vertices\r\n  @param {L.Point} a:\r\n  @param {L.Point} b:\r\n  @param {L.Point} point:\r\n  @returns {Array}:\r\n  */\r\n  translateSegment:function(a,b, point){\r\n    var result=[];\r\n    result.push(a.add(point)); result.push(b.add(point));\r\n    return result;\r\n  },\r\n\r\n  /**\r\n  using two points, computes A,B,C such as Ax+By+c=0 for these points.\r\n  @param {L.Point} start: first point of segment\r\n  @param {L.Point} finish: second point of segment\r\n  @returns {Array}: [A,B,C]\r\n  */\r\n  computeCanonicCoeffs:function(start,finish){\r\n    var ABC=[];\r\n    ABC.push(start.y-finish.y);\r\n    ABC.push(finish.x - start.x);\r\n    ABC.push(start.x * finish.y - finish.x * start.y);\r\n    return ABC;\r\n  },\r\n\r\n  /**\r\n        Returns slope (Ax+B) between two points, safe for degenerate cases\r\n        @param {L.Point} a\r\n        @param {L.Point} b\r\n        @returns {Object} with ``a`` and ``b`` properties.\r\n     */\r\n  computeSlope: function(start, finish) {\r\n     var abc = this.computeCanonicCoeffs(a,b); //ax+by+c=0 => y=-a/b x - c/b\r\n     if(abc[1]!=0){\r\n       return L.point(-abc[0]/abc[1],-abc[2]/abc[1]);\r\n     }\r\n  },\r\n\r\n\r\n  /**\r\n  computes a point where two lines intersection\r\n  @param {L.Point} a: a first point of first line defined by two points\r\n  @param {L.Point} b: a second point of first line defined by two points\r\n  @param {L.Point} c: a first point of second line defined by two points\r\n  @param {L.Point} d: a first point of second line defined by two points\r\n  @returns {L.Point} :intersection point or null if lines are parallel to each other\r\n  */\r\n  lineIntersection:function(a,b,c,d){\r\n    var abc1=this.computeCanonicCoeffs(a,b),abc2 = this.computeCanonicCoeffs(c,d);\r\n    var denominator = abc1[0]*abc2[1] - abc2[0]*abc1[1];\r\n    if(denominator==0){\r\n      return;\r\n    }\r\n    var x = -(abc1[2]*abc2[1] - abc2[2]*abc1[1])/denominator;\r\n    var y = -(abc1[0]*abc2[2] - abc2[0]*abc1[2])/denominator;\r\n    return L.point(x,y);\r\n  },\r\n\r\n  /**\r\n    computes a  unit normal for [a,b] segment\r\n    @param {L.Point} a:\r\n    @param {L.Point} b:\r\n    @returns {L.point}: unit normal\r\n  */\r\n  getNormalOnSegment:function(a,b){\r\n    var abc=this.computeCanonicCoeffs(a,b);\r\n    var normal = L.point(abc[0],abc[1]);\r\n    return this.normalizePt(normal);\r\n  },\r\n\r\n  /**\r\n  Computes an euclidian length of point\r\n  @param {L.Point} pt:\r\n  @returns {Number}\r\n  */\r\n  get2dVectorLength:function(pt){\r\n    return Math.sqrt(pt.x*pt.x + pt.y*pt.y);\r\n  },\r\n\r\n  /**\r\n  Makes this point a unit-lengthed\r\n  @param {L.Point} pt:\r\n  @returns {L.Point}:\r\n  */\r\n  normalizePt:function(pt){\r\n    return (pt.x===0&&pt.y===0)?L.point(0,0):pt.divideBy(this.get2dVectorLength(pt));\r\n  },\r\n\r\n  /**\r\n  copies segment and translates copy in normal direction by height value (may be negative)\r\n  It also extands or shrinks new segments to make sure they are connected to each and other\r\n  @param {Array} polyline: polyline to translate segments of which\r\n  @param {Number} height:  height of normal\r\n  @returns {Array}: translated copy of polyline\r\n  */\r\n  translateByNormals:function(polyline,height){ //TODO [translateByNormals] not working properly - when segments are fully inside polygon\r\n    var out_polyline=[];\r\n    for(var i=0;i<polyline.length-1;i++){\r\n      var normal = this.getNormalOnSegment(polyline[i],polyline[i+1]).multiplyBy(height);\r\n      var current_segment=this.translateSegment(polyline[i],polyline[i+1],normal);\r\n      //now check if current segment is connected well to previous\r\n      if(i>0){ //so -> it isn't first segment, and out_polyline has at least two points\r\n        var pt_intersect = this.lineIntersection(out_polyline[out_polyline.length-2],out_polyline[out_polyline.length-1],current_segment[0],current_segment[1]);\r\n        out_polyline[out_polyline.length-1] = pt_intersect;\r\n        out_polyline.push(current_segment[1]);\r\n      }else{\r\n        out_polyline.push(current_segment[0]); out_polyline.push(current_segment[1]);\r\n      }\r\n    }\r\n    return out_polyline;\r\n  },\r\n\r\n  /**\r\n  code from L.GeometryUtil plugin\r\n  @memberof geomEssentials#\r\n  */\r\n  interpolateOnPointSegment: function (a,b, ratio) {\r\n      var res= L.point(\r\n          (a.x * (1 - ratio)) + (ratio * b.x),\r\n          (a.y * (1 - ratio)) + (ratio * b.y)\r\n      );\r\n      return res;\r\n  },\r\n\r\n  /**\r\n  Get a segment from polyline part by it's offset\r\n  @param {Number} offset: na offset for the polyline\r\n  @param {Array} polyline: points of the polyline\r\n  @param {Array} computed_lengths: precomputed lengths (if available) for polyline segments\r\n  @returns {Array} : index of start point of segment and dist which is offset from start of the line to the end of found segment\r\n  */\r\n  getSegmentIdxAndDistByOffset:function(offset,polyline,computed_lengths){\r\n    var cdist=0;\r\n    for(var i=0;i<polyline.length-1;i++){\r\n      cdist+=computed_lengths[i];\r\n      if(offset<=cdist){\r\n        return [i,cdist]\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n  NOT USED TOFIX [getIndexBasedOnTotalLengthRandom] remove?\r\n  based on https://blog.dotzero.ru/weighted-random-simple/\r\n  get a random element from segments array of the item, assuming it is sorted lengths ascending order\r\n  probability is higher for longer segment\r\n  @param {Array} polyline: points of the polyline\r\n  @param {Array} computed_lengths: precomputed lengths (if available) for polyline segments\r\n  @param {NUmber} totalLength: precomputed total length of the polyline\r\n  */\r\n  getIndexBasedOnTotalLengthRandom:function(polyline,computed_lengths,totalLength){\r\n    var random_pos = Math.random()*totalLength; //get a position random for all segments of this polyline visible on the screen\r\n    //obtain and index of segment, to which belongs this position, it is assumed tha segments are sorted by length\r\n    var clen=0;\r\n    for(var i=0;i<polyline.length-1;i++){\r\n      clen+=computed_lengths[i];\r\n      if(clen>random_pos)break;\r\n    }\r\n    return i;\r\n  },\r\n\r\n  /**\r\n  Supplement function for extractSubPolyline\r\n  returns start index, end index in segments array for item, also first cropped seg and last cropped seg.\r\n  If only one seg here, it is crop both ends.\r\n  @param {Number} offset_start: should be less than total length of polyline\r\n  @param {Number} offset_end: should be greater than offset_start\r\n  @param {Array} polyline: points of the polyline\r\n  @param {Array} computed_lengths: precomputed lengths (if available) for polyline segments\r\n  @returns {Object}:\r\n  */\r\n  extractSubPolyline:function(offset_start,offset_end,polyline,computed_lengths){\r\n    var start = this.getSegmentIdxAndDistByOffset(offset_start,polyline,computed_lengths),\r\n        end = this.getSegmentIdxAndDistByOffset(offset_end,polyline,computed_lengths),\r\n        start_point= this.interpolateOnPointSegment(polyline[start[0]],polyline[start[0]+1],(computed_lengths[start[0]]-start[1]+offset_start)/computed_lengths[start[0]]),\r\n        end_point = this.interpolateOnPointSegment(polyline[end[0]],polyline[end[0]+1],(computed_lengths[end[0]]-end[1]+offset_end)/computed_lengths[end[0]]),\r\n        result = [start_point];\r\n    for(var i=start[0]+1;i<=end[0];i++){ //push every point from end of start segment to segment prior to last\r\n      result.push(polyline[i]);\r\n    }\r\n    result.push(end_point);\r\n    return result;\r\n  },\r\n\r\n  /**\r\n  Used for calculationg overlaps for text along path (textPath SVG).\r\n  @param {Number} start_offset: global offset for this polyline (item), same as used in rendering\r\n  @param {Number} end_offset: global offset for this polyline (item), same as used in rendering\r\n  @param {LabelItem} item:\r\n  @returns {Array} : a poly bounding with height of item.txSize.y\r\n  */\r\n  computeLineBoundaryPolygon:function(polyline,height){\r\n    var lower_boundary = polyline.slice(0);\r\n    var upper_boundary=this.translateByNormals(polyline,height);\r\n    Array.prototype.push.apply(lower_boundary, upper_boundary.reverse());\r\n    this.polyLPointToArray(lower_boundary);\r\n    return lower_boundary;\r\n  },\r\n\r\n  /*\r\n  Converts poly of L.Point to poly of [x,y]. Note - original variable is to be modified\r\n  @param {Array} polyLPoint: poly to modify\r\n  **/\r\n  polyLPointToArray:function(polyLPoint){\r\n    for(var i=0;i<polyLPoint.length;i++)\r\n      polyLPoint[i] = [polyLPoint[i].x,polyLPoint[i].y];\r\n  },\r\n\r\n  /**\r\nfunction from https://rosettacode.org/wiki/Sutherland-Hodgman_polygon_clipping#JavaScript\r\n@param {Array} subjectPolygon: first poly\r\n@param {Array} clipPolygon: second poly\r\n@returns {Array} : result poly\r\n@memberof geomEssentials#\r\n*/\r\nclipPoly2:function(subjectPolygon, clipPolygon) {\r\n  var cp1, cp2, s, e;\r\n  var inside = function (p) {\r\n      return (cp2[0]-cp1[0])*(p[1]-cp1[1]) > (cp2[1]-cp1[1])*(p[0]-cp1[0]);\r\n  };\r\n  var intersection = function () {\r\n      var dc = [ cp1[0] - cp2[0], cp1[1] - cp2[1] ],\r\n          dp = [ s[0] - e[0], s[1] - e[1] ],\r\n          n1 = cp1[0] * cp2[1] - cp1[1] * cp2[0],\r\n          n2 = s[0] * e[1] - s[1] * e[0],\r\n          n3 = 1.0 / (dc[0] * dp[1] - dc[1] * dp[0]);\r\n      return [(n1*dp[0] - n2*dc[0]) * n3, (n1*dp[1] - n2*dc[1]) * n3];\r\n  };\r\n  var outputList = subjectPolygon;\r\n  cp1 = clipPolygon[clipPolygon.length-1];\r\n  for (var j in clipPolygon) {\r\n      var cp2 = clipPolygon[j];\r\n      var inputList = outputList;\r\n      outputList = [];\r\n      s = inputList[inputList.length - 1]; //last on the input list\r\n      for (var i in inputList) {\r\n          var e = inputList[i];\r\n          if (inside(e)) {\r\n              if (!inside(s)) {\r\n                  outputList.push(intersection());\r\n              }\r\n              outputList.push(e);\r\n          }\r\n          else if (inside(s)) {\r\n              outputList.push(intersection());\r\n          }\r\n          s = e;\r\n      }\r\n      cp1 = cp2;\r\n  }\r\n  return outputList\r\n},\r\n\r\nclipPoly:function(poly1,poly2){\r\n    var intersection = greinerHormann.intersection(poly1, poly2);\r\n    if(!intersection)return [];\r\n    if(intersection.length>0)return intersection[0];\r\n  },\r\n\r\n\r\n  /**\r\n  returns a combined poly from two\r\n  */\r\n  addPoly:function(poly1,poly2){\r\n    var union = greinerHormann.union(poly1, poly2);\r\n    if(!union)return [];\r\n    if(union.length>0)return union[0];\r\n  },\r\n\r\n  subtractPoly:function(poly1,poly2){\r\n    var diff = greinerHormann.diff(poly1, poly2);\r\n    if(!diff)return [];else return diff;\r\n  },\r\n\r\n  /**\r\n  code from http://www.codeproject.com/Articles/13467/A-JavaScript-Implementation-of-the-Surveyor-s-Form\r\n  for single polygon only, and no holes in\r\n  @param {Array} poly: a poly to determine area of\r\n  @memberof geomEssentials#\r\n  */\r\n  polyArea:function(poly) {\r\n    // Calculate the area of a polygon\r\n    // using the data stored\r\n    // in the arrays x and y\r\n    var area = 0.0;\r\n    if(poly){\r\n      var poly=poly.slice(0);\r\n      if(poly.length>2)poly.push(poly[0]); //close the poly\r\n      for(var k = 0; k < poly.length-1; k++ ) {\r\n          var xDiff = poly[k+1][0] - poly[k][0];\r\n          var yDiff = poly[k+1][1] - poly[k][1];\r\n          area += + poly[k][0] * yDiff - poly[k][1] * xDiff;\r\n      }\r\n      area = 0.5 * area;\r\n    }\r\n    return area;\r\n  },\r\n\r\n\r\n  /**\r\n  check if two labels overlab, if no returns false, if yes returns ???area OR polygon??? of averlap\r\n  @param {} poly1:a first polygon to check overlap with second\r\n  @param {} poly2:a second polygon to check overlap with first\r\n  @returns {float}: an area of overlapping, zero if no overlapping\r\n  */\r\n  checkOverLappingArea:function(poly1,poly2,calculateAreaNotOnlyFactOfOverlapping) {\r\n    var clipped = this.clipPoly(poly1,poly2);\r\n    if(calculateAreaNotOnlyFactOfOverlapping){\r\n      var area =this.polyArea(clipped);\r\n      return area;\r\n    };\r\n    if(clipped.length>0)return 1;else return 0; //for performance, skip area calculation\r\n  },\r\n\r\n  /**\r\n  rotates given polygon to a given angle around basepoint\r\n  code partialy from web, don't remember from...\r\n  @param {Array} poly: a polygon to rotate\r\n  @param {Array} basepoint: base point\r\n  @param {float} angle: an angle in degrees\r\n  @returns {Array}: rotated poly\r\n  @memberof geomEssentials#\r\n  */\r\n  rotatePoly:function(poly, basepoint,angle){\r\n    var res=[];\r\n    var angleRad = angle*Math.PI/180;\r\n    for(var i=0;i<poly.length;i++){\r\n      var pPoint = poly[i],\r\n      x_rotated = Math.cos(angleRad)*(pPoint[0]-basepoint[0]) - Math.sin(angleRad)*(pPoint[1]-basepoint[1]) + basepoint[0],\r\n      y_rotated = Math.sin(angleRad)*(pPoint[0]-basepoint[0]) + Math.cos(angleRad)*(pPoint[1]-basepoint[1]) + basepoint[1];\r\n      res.push([x_rotated,y_rotated]);\r\n    }\r\n    return res;\r\n  },\r\n\r\n  /**\r\n  moves a poly by adding pt2add point to all its vertices\r\n  @param {Array} poly: a poly to movePoly\r\n  @param {Array} pt2add: a point to add to all vertices\r\n  @returns {Array}: moved poly\r\n  @memberof geomEssentials#\r\n  */\r\n  movePolyByAdding:function(poly,pt2add) {\r\n    var res=[];\r\n    for(var i=0;i<poly.length;i++){\r\n      res.push([poly[i][0] + pt2add.x,poly[i][1] + pt2add.y]);    \r\n    }\r\n    return res;\r\n  },\r\n\r\n  /**\r\n  moves a poly by translating all its vertices to moveto, using first vertex as origin\r\n  @param {Array} poly: a poly to movePoly\r\n  @param {Array} moveto: where translate all vertices\r\n  @returns {Array}: moved poly\r\n  @memberof geomEssentials#\r\n  */\r\n  movePolyByMovingTo:function(poly,moveto){\r\n    var res=poly.slice(0);\r\n    moveto.x = moveto.x-poly[0][0];\r\n    moveto.y = moveto.y-poly[0][1];\r\n    for(var i=1;i<poly.length;i++){\r\n      res[i][0]+=moveto.x; res[i][1]+=moveto.y;\r\n    }\r\n    return res;\r\n  },\r\n\r\n  /**\r\n  @param {L.Bounds} bounds\r\n  */\r\n  boundsToPointArray:function (bounds) {\r\n    var min = bounds.min, max = bounds.max;\r\n    var result = [[min.x,min.y], [min.x,max.y], [max.x,max.y], [max.x,min.y]];\r\n    return result;\r\n  },\r\n\r\n  clipBounds:function(b1,b2){\r\n    if(b1.overlaps(b2)){\r\n      return new L.bounds([Math.max(b1.min.x,b2.min.x),Math.max(b1.min.y,b2.min.y)],\r\n                          [Math.min(b1.max.x,b2.max.x),Math.min(b1.max.y,b2.max.y)]);\r\n    }return false;\r\n  },\r\n\r\n  /**\r\n  computex a domain poly (contains all available text positions for this pt)\r\n  @param {L.Point} pt\r\n  @param {L.Point} txSize\r\n  @param {L.Bounds} mapbounds\r\n  @returns {L.bounds} : polygon\r\n  */\r\n  getPointTextDomain:function(pt,txSize,mapbounds){\r\n    var temp_bounds = L.bounds(pt,pt.add(txSize));\r\n    temp_bounds.extend(pt.subtract(txSize));\r\n    return this.clipBounds(temp_bounds,mapbounds);\r\n  },\r\n\r\n  /**\r\n  @param {L.Point} pt\r\n  @param {L.Point} txSize\r\n  @returns {Array} : polygon\r\n  */\r\n  getSimplePolyText:function(pt,txSize){\r\n    var temp_bounds = L.bounds(L.point(0,0),(txSize));\r\n    return this.boundsToPointArray(temp_bounds);\r\n  },\r\n\r\n  getAvailableTextOriginBounds(textDomain,txSize){\r\n    var maxOriginValue = L.point(textDomain.max.x-txSize.x,textDomain.max.y + txSize.y);\r\n    return L.bounds(textDomain.min,maxOriginValue);\r\n  }\r\n}\r\n\r\nmodule.exports = geomEssentials;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/geomEssentials.js\n ** module id = 3\n ** module chunks = 0\n **/","var clip = require('./clip');\r\n\r\nmodule.exports = {\r\n    /**\r\n     * @api\r\n     * @param  {Array.<Array.<Number>|Array.<Object>} polygonA\r\n     * @param  {Array.<Array.<Number>|Array.<Object>} polygonB\r\n     * @return {Array.<Array.<Number>>|Array.<Array.<Object>|Null}\r\n     */\r\n    union: function(polygonA, polygonB) {\r\n        return clip(polygonA, polygonB, false, false);\r\n    },\r\n\r\n    /**\r\n     * @api\r\n     * @param  {Array.<Array.<Number>|Array.<Object>} polygonA\r\n     * @param  {Array.<Array.<Number>|Array.<Object>} polygonB\r\n     * @return {Array.<Array.<Number>>|Array.<Array.<Object>>|Null}\r\n     */\r\n    intersection: function(polygonA, polygonB) {\r\n        return clip(polygonA, polygonB, true, true);\r\n    },\r\n\r\n    /**\r\n     * @api\r\n     * @param  {Array.<Array.<Number>|Array.<Object>} polygonA\r\n     * @param  {Array.<Array.<Number>|Array.<Object>} polygonB\r\n     * @return {Array.<Array.<Number>>|Array.<Array.<Object>>|Null}\r\n     */\r\n    diff: function(polygonA, polygonB) {\r\n        return clip(polygonA, polygonB, false, true);\r\n    },\r\n\r\n    clip: clip\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/third_party/GreinerHormann/src/greiner-hormann.js\n ** module id = 4\n ** module chunks = 0\n **/","var Polygon = require('./polygon');\r\n\r\n/**\r\n * Clip driver\r\n * @api\r\n * @param  {Array.<Array.<Number>>} polygonA\r\n * @param  {Array.<Array.<Number>>} polygonB\r\n * @param  {Boolean}                sourceForwards\r\n * @param  {Boolean}                clipForwards\r\n * @return {Array.<Array.<Number>>}\r\n */\r\nmodule.exports = function(polygonA, polygonB, eA, eB) {\r\n    var result, source = new Polygon(polygonA),\r\n        clip = new Polygon(polygonB),\r\n        result = source.clip(clip, eA, eB);\r\n\r\n    return result;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/third_party/GreinerHormann/src/clip.js\n ** module id = 5\n ** module chunks = 0\n **/","var Vertex = require('./vertex');\r\nvar Intersection = require('./intersection');\r\n\r\n/**\r\n * Polygon representation\r\n * @param {Array.<Array.<Number>>} p\r\n * @param {Boolean=}               arrayVertices\r\n *\r\n * @constructor\r\n */\r\nvar Polygon = function(p, arrayVertices) {\r\n\r\n    /**\r\n     * @type {Vertex}\r\n     */\r\n    this.first = null;\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.vertices = 0;\r\n\r\n    /**\r\n     * @type {Vertex}\r\n     */\r\n    this._lastUnprocessed = null;\r\n\r\n    /**\r\n     * Whether to handle input and output as [x,y] or {x:x,y:y}\r\n     * @type {Boolean}\r\n     */\r\n    this._arrayVertices = (typeof arrayVertices === \"undefined\") ?\r\n        Array.isArray(p[0]) :\r\n        arrayVertices;\r\n\r\n    for (var i = 0, len = p.length; i < len; i++) {\r\n        this.addVertex(new Vertex(p[i]));\r\n    }\r\n};\r\n\r\n/**\r\n * Add a vertex object to the polygon\r\n * (vertex is added at the 'end' of the list')\r\n *\r\n * @param vertex\r\n */\r\nPolygon.prototype.addVertex = function(vertex) {\r\n    if (this.first == null) {\r\n        this.first = vertex;\r\n        this.first.next = vertex;\r\n        this.first.prev = vertex;\r\n    } else {\r\n        var next = this.first,\r\n            prev = next.prev;\r\n\r\n        next.prev = vertex;\r\n        vertex.next = next;\r\n        vertex.prev = prev;\r\n        prev.next = vertex;\r\n    }\r\n    this.vertices++;\r\n};\r\n\r\n/**\r\n * Inserts a vertex inbetween start and end\r\n *\r\n * @param {Vertex} vertex\r\n * @param {Vertex} start\r\n * @param {Vertex} end\r\n */\r\nPolygon.prototype.insertVertex = function(vertex, start, end) {\r\n    var prev, curr = start;\r\n\r\n    while (!curr.equals(end) && curr._distance < vertex._distance) {\r\n        curr = curr.next;\r\n    }\r\n\r\n    vertex.next = curr;\r\n    prev = curr.prev;\r\n\r\n    vertex.prev = prev;\r\n    prev.next = vertex;\r\n    curr.prev = vertex;\r\n\r\n    this.vertices++;\r\n};\r\n\r\n/**\r\n * Get next non-intersection point\r\n * @param  {Vertex} v\r\n * @return {Vertex}\r\n */\r\nPolygon.prototype.getNext = function(v) {\r\n    var c = v;\r\n    while (c._isIntersection) {\r\n        c = c.next;\r\n    }\r\n    return c;\r\n};\r\n\r\n/**\r\n * Unvisited intersection\r\n * @return {Vertex}\r\n */\r\nPolygon.prototype.getFirstIntersect = function() {\r\n    var v = this._firstIntersect || this.first;\r\n\r\n    do {\r\n        if (v._isIntersection && !v._visited) {\r\n            break;\r\n        }\r\n\r\n        v = v.next;\r\n    } while (!v.equals(this.first));\r\n\r\n    this._firstIntersect = v;\r\n    return v;\r\n};\r\n\r\n/**\r\n * Does the polygon have unvisited vertices\r\n * @return {Boolean} [description]\r\n */\r\nPolygon.prototype.hasUnprocessed = function() {\r\n    var v = this._lastUnprocessed || this.first;\r\n    do {\r\n        if (v._isIntersection && !v._visited) {\r\n            this._lastUnprocessed = v;\r\n            return true;\r\n        }\r\n\r\n        v = v.next;\r\n    } while (!v.equals(this.first));\r\n\r\n    this._lastUnprocessed = null;\r\n    return false;\r\n};\r\n\r\n/**\r\n * The output depends on what you put in, arrays or objects\r\n * @return {Array.<Array<Number>|Array.<Object>}\r\n */\r\nPolygon.prototype.getPoints = function() {\r\n    var points = [],\r\n        v = this.first;\r\n\r\n    if (this._arrayVertices) {\r\n        do {\r\n            points.push([v.x, v.y]);\r\n            v = v.next;\r\n        } while (v !== this.first);\r\n    } else {\r\n        do {\r\n            points.push({\r\n                x: v.x,\r\n                y: v.y\r\n            });\r\n            v = v.next;\r\n        } while (v !== this.first);\r\n    }\r\n\r\n    return points;\r\n};\r\n\r\n/**\r\n * Clip polygon against another one.\r\n * Result depends on algorithm direction:\r\n *\r\n * Intersection: forwards forwards\r\n * Union:        backwars backwards\r\n * Diff:         backwards forwards\r\n *\r\n * @param {Polygon} clip\r\n * @param {Boolean} sourceForwards\r\n * @param {Boolean} clipForwards\r\n */\r\nPolygon.prototype.clip = function(clip, sourceForwards, clipForwards) {\r\n    var sourceVertex = this.first,\r\n        clipVertex = clip.first,\r\n        sourceInClip, clipInSource;\r\n\r\n    // calculate and mark intersections\r\n    do {\r\n        if (!sourceVertex._isIntersection) {\r\n            do {\r\n                if (!clipVertex._isIntersection) {\r\n                    var i = new Intersection(\r\n                        sourceVertex,\r\n                        this.getNext(sourceVertex.next),\r\n                        clipVertex, clip.getNext(clipVertex.next));\r\n\r\n                    if (i.valid()) {\r\n                        var sourceIntersection =\r\n                            Vertex.createIntersection(i.x, i.y, i.toSource),\r\n                            clipIntersection =\r\n                            Vertex.createIntersection(i.x, i.y, i.toClip);\r\n\r\n                        sourceIntersection._corresponding = clipIntersection;\r\n                        clipIntersection._corresponding = sourceIntersection;\r\n\r\n                        this.insertVertex(\r\n                            sourceIntersection,\r\n                            sourceVertex,\r\n                            this.getNext(sourceVertex.next));\r\n                        clip.insertVertex(\r\n                            clipIntersection,\r\n                            clipVertex,\r\n                            clip.getNext(clipVertex.next));\r\n                    }\r\n                }\r\n                clipVertex = clipVertex.next;\r\n            } while (!clipVertex.equals(clip.first));\r\n        }\r\n\r\n        sourceVertex = sourceVertex.next;\r\n    } while (!sourceVertex.equals(this.first));\r\n\r\n    // phase two - identify entry/exit points\r\n    sourceVertex = this.first;\r\n    clipVertex = clip.first;\r\n\r\n    sourceInClip = sourceVertex.isInside(clip);\r\n    clipInSource = clipVertex.isInside(this);\r\n\r\n    sourceForwards ^= sourceInClip;\r\n    clipForwards ^= clipInSource;\r\n\r\n    do {\r\n        if (sourceVertex._isIntersection) {\r\n            sourceVertex._isEntry = sourceForwards;\r\n            sourceForwards = !sourceForwards;\r\n        }\r\n        sourceVertex = sourceVertex.next;\r\n    } while (!sourceVertex.equals(this.first));\r\n\r\n    do {\r\n        if (clipVertex._isIntersection) {\r\n            clipVertex._isEntry = clipForwards;\r\n            clipForwards = !clipForwards;\r\n        }\r\n        clipVertex = clipVertex.next;\r\n    } while (!clipVertex.equals(clip.first));\r\n\r\n    // phase three - construct a list of clipped polygons\r\n    var list = [];\r\n\r\n    while (this.hasUnprocessed()) {\r\n        var current = this.getFirstIntersect(),\r\n            // keep format\r\n            clipped = new Polygon([], this._arrayVertices);\r\n\r\n        clipped.addVertex(new Vertex(current.x, current.y));\r\n        do {\r\n            current.visit();\r\n            if (current._isEntry) {\r\n                do {\r\n                    current = current.next;\r\n                    clipped.addVertex(new Vertex(current.x, current.y));\r\n                } while (!current._isIntersection);\r\n\r\n            } else {\r\n                do {\r\n                    current = current.prev;\r\n                    clipped.addVertex(new Vertex(current.x, current.y));\r\n                } while (!current._isIntersection);\r\n            }\r\n            current = current._corresponding;\r\n        } while (!current._visited);\r\n\r\n        list.push(clipped.getPoints());\r\n    }\r\n\r\n    if (list.length === 0) {\r\n        if (sourceInClip) {\r\n            list.push(this.getPoints());\r\n        }\r\n        if (clipInSource) {\r\n            list.push(clip.getPoints());\r\n        }\r\n        if (list.length === 0) {\r\n            list = null;\r\n        }\r\n    }\r\n\r\n    return list;\r\n};\r\n\r\nmodule.exports = Polygon;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/third_party/GreinerHormann/src/polygon.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\r\n * Vertex representation\r\n *\r\n * @param {Number|Array.<Number>} x\r\n * @param {Number=}               y\r\n *\r\n * @constructor\r\n */\r\nvar Vertex = function(x, y) {\r\n\r\n    if (arguments.length === 1) {\r\n        // Coords\r\n        if (Array.isArray(x)) {\r\n            y = x[1];\r\n            x = x[0];\r\n        } else {\r\n            y = x.y;\r\n            x = x.x;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * X coordinate\r\n     * @type {Number}\r\n     */\r\n    this.x = x;\r\n\r\n    /**\r\n     * Y coordinate\r\n     * @type {Number}\r\n     */\r\n    this.y = y;\r\n\r\n    /**\r\n     * Next node\r\n     * @type {Vertex}\r\n     */\r\n    this.next = null;\r\n\r\n    /**\r\n     * Previous vertex\r\n     * @type {Vertex}\r\n     */\r\n    this.prev = null;\r\n\r\n    /**\r\n     * Corresponding intersection in other polygon\r\n     */\r\n    this._corresponding = null;\r\n\r\n    /**\r\n     * Distance from previous\r\n     */\r\n    this._distance = 0.0;\r\n\r\n    /**\r\n     * Entry/exit point in another polygon\r\n     * @type {Boolean}\r\n     */\r\n    this._isEntry = true;\r\n\r\n    /**\r\n     * Intersection vertex flag\r\n     * @type {Boolean}\r\n     */\r\n    this._isIntersection = false;\r\n\r\n    /**\r\n     * Loop check\r\n     * @type {Boolean}\r\n     */\r\n    this._visited = false;\r\n};\r\n\r\n/**\r\n * Creates intersection vertex\r\n * @param  {Number} x\r\n * @param  {Number} y\r\n * @param  {Number} distance\r\n * @return {Vertex}\r\n */\r\nVertex.createIntersection = function(x, y, distance) {\r\n    var vertex = new Vertex(x, y);\r\n    vertex._distance = distance;\r\n    vertex._isIntersection = true;\r\n    vertex._isEntry = false;\r\n    return vertex;\r\n};\r\n\r\n/**\r\n * Mark as visited\r\n */\r\nVertex.prototype.visit = function() {\r\n    this._visited = true;\r\n    if (this._corresponding !== null && !this._corresponding._visited) {\r\n        this._corresponding.visit();\r\n    }\r\n};\r\n\r\n/**\r\n * Convenience\r\n * @param  {Vertex}  v\r\n * @return {Boolean}\r\n */\r\nVertex.prototype.equals = function(v) {\r\n    return this.x === v.x && this.y === v.y;\r\n};\r\n\r\n/**\r\n * Check if vertex is inside a polygon by odd-even rule:\r\n * If the number of intersections of a ray out of the point and polygon\r\n * segments is odd - the point is inside.\r\n * @param {Polygon} poly\r\n * @return {Boolean}\r\n */\r\nVertex.prototype.isInside = function(poly) {\r\n    var oddNodes = false,\r\n        vertex = poly.first,\r\n        next = vertex.next,\r\n        x = this.x,\r\n        y = this.y;\r\n\r\n    do {\r\n        if ((vertex.y < y && next.y >= y ||\r\n                next.y < y && vertex.y >= y) &&\r\n            (vertex.x <= x || next.x <= x)) {\r\n\r\n            oddNodes ^= (vertex.x + (y - vertex.y) /\r\n                (next.y - vertex.y) * (next.x - vertex.x) < x);\r\n        }\r\n\r\n        vertex = vertex.next;\r\n        next = vertex.next || poly.first;\r\n    } while (!vertex.equals(poly.first));\r\n\r\n    return oddNodes;\r\n};\r\n\r\nmodule.exports = Vertex;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/third_party/GreinerHormann/src/vertex.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\r\n * Intersection\r\n * @param {Vertex} s1\r\n * @param {Vertex} s2\r\n * @param {Vertex} c1\r\n * @param {Vertex} c2\r\n * @constructor\r\n */\r\nvar Intersection = function(s1, s2, c1, c2) {\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.x = 0.0;\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.y = 0.0;\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.toSource = 0.0;\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.toClip = 0.0;\r\n\r\n    var d = (c2.y - c1.y) * (s2.x - s1.x) - (c2.x - c1.x) * (s2.y - s1.y);\r\n\r\n    if (d === 0) {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.toSource = ((c2.x - c1.x) * (s1.y - c1.y) - (c2.y - c1.y) * (s1.x - c1.x)) / d;\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.toClip = ((s2.x - s1.x) * (s1.y - c1.y) - (s2.y - s1.y) * (s1.x - c1.x)) / d;\r\n\r\n    if (this.valid()) {\r\n        this.x = s1.x + this.toSource * (s2.x - s1.x);\r\n        this.y = s1.y + this.toSource * (s2.y - s1.y);\r\n    }\r\n};\r\n\r\n/**\r\n * @return {Boolean}\r\n */\r\nIntersection.prototype.valid = function() {\r\n    return (0 < this.toSource && this.toSource < 1) && (0 < this.toClip && this.toClip < 1);\r\n};\r\n\r\nmodule.exports = Intersection;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/third_party/GreinerHormann/src/intersection.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar geomEssentials = require(\"./geomEssentials.js\");\r\nvar autoLabelManager =require(\"./autoLabelManager.js\");\r\nvar candidateGenerator =require(\"./CandidateGenerator.js\");\r\n\r\nvar simulatedAnnealing =function(autoLabelMan,options) {\r\n  var result = {\r\n    aManager:autoLabelMan,\r\n\r\n    /**\r\n    summarizing ovelapping of all layers. We store for each label it's total overlapping area with others, the sum values for all labels\r\n    */\r\n    evaluateCurSet:function(){\r\n      for(var i in this.aManager.conflictMatrix){\r\n        var ij = this.aManager.conflictMatrix[i];\r\n        if(ij[2]>this.options.maxOverlapsForPair){\r\n          this.aManager.curvalues[i]=0; //exclude from counting from now - this pair is always overlap\r\n          ij[3]=true;\r\n          this.aManager.hasAnywayOverlaps=true;\r\n          continue;\r\n        }\r\n        var curlabel_value = geomEssentials.checkOverLappingArea(this.aManager.curset[ij[0]].poly(),this.aManager.curset[ij[1]].poly(),false);\r\n        if(curlabel_value>0){\r\n          ij[2]++; //increment number of overlaps for pair\r\n        }\r\n        this.aManager.curvalues[i] = curlabel_value;\r\n      }\r\n      this.aManager.curvalues.push(this.aManager.countOverlappedLabels());\r\n    },\r\n\r\n    dodebug:function(message){\r\n      if(this.options.debug)console.log(message);\r\n    },\r\n\r\n    processOptions:function(options){\r\n      this.options=options || {};\r\n      this.options.t0 = this.options.t0 || 2.5;\r\n      this.options.decrease_value = this.options.decrease_value || 0.9; //decrease by ten percent each decrease step\r\n      this.options.tmin = this.options.tmin || 0.0;\r\n      this.options.constant_temp_repositionings = this.options.constant_temp_repositionings || 10;\r\n      this.options.max_improvments_count = this.options.max_improvments_count || 10;\r\n      this.options.max_noimprove_count = this.options.max_noimprove_count || 20;\r\n      this.options.maxsteps = this.options.maxsteps || 100;\r\n      this.options.maxtotaliterations = this.options.maxtotaliterations || 1000;\r\n      this.options.minimizeTotalOverlappingArea=this.options.minimizeTotalOverlappingArea || false;\r\n      this.options.debug=this.options.debug || true;\r\n      this.options.allowBothSidesOfLine=this.options.allowBothSidesOfLine || true;\r\n      this.options.maxOverlapsForPair = this.options.maxOverlapsForPair || 200;\r\n    },\r\n\r\n    /**\r\n    using for convenience\r\n    */\r\n    _doReturn:function(iterations){\r\n      this.aManager.iterations=iterations;\r\n    },\r\n\r\n    /**\r\n    perfroms actuall annealing proc\r\n    */\r\n    _doAnnealing:function(){\r\n      //init\r\n      this.aManager.getInitialRandomState(); //current label postions\r\n      this.evaluateCurSet(); //current overlaping matrix (conflict graph)\r\n      var t=this.options.t0, stepcount=0, doexit=this.aManager.overlap_count()=== 0,//if no overlaping at init state, do nothing and return current state\r\n          iterations=0;\r\n      while(true){\r\n        if(t<=this.options.tmin || stepcount>=this.options.maxsteps) return this._doReturn(iterations);\r\n        stepcount++;\r\n        var improvements_count=0, no_improve_count=0;\r\n        for(var i=0;i<this.options.constant_temp_repositionings*this.aManager.curset.length;i++){ //while constant temperature, do some replacments\r\n          this.aManager.saveOld();\r\n          this.aManager.applyNewPosToOverlappedLabels();\r\n          // this.evaluateAfterSeveralChanged(overlapped_indexes);\r\n          this.evaluateCurSet();\r\n          iterations++;\r\n          if(this.aManager.overlap_count() === 0){\r\n            return this._doReturn(iterations); }\r\n          if(iterations>this.options.maxtotaliterations){\r\n             return this._doReturn(iterations); }\r\n          var delta = (this.aManager.old_overlap_count() - this.aManager.overlap_count());\r\n          if(delta<0){//ie, new labeling is worse!\r\n            var P=1 - Math.exp(delta/t);\r\n            if(P>Math.random()){ //undo label reposition with probability of P\r\n              this.aManager.restoreOld();\r\n              no_improve_count++;\r\n            }else { //approve new repositioning\r\n              improvements_count++;\r\n              no_improve_count=0;\r\n            }\r\n          }else{\r\n             improvements_count++;\r\n             no_improve_count=0;\r\n           }\r\n          if(no_improve_count>=this.options.max_noimprove_count*this.aManager.curset.length){ //it is already optimal\r\n              return this._doReturn(iterations);\r\n          }\r\n          if(improvements_count>=this.options.max_improvments_count*this.aManager.curset.length){\r\n            break; //of for\r\n          }\r\n        }\r\n        t*=this.options.decrease_value; //decrease temp\r\n      };\r\n    },\r\n\r\n    /**\r\n    find optimal label placement based on simulated annealing approach, relies on paper https://www.eecs.harvard.edu/shieber/Biblio/Papers/jc.label.pdf\r\n    @param {Object} callback: a function to gather results and use them to render\r\n    @param {Object} context: a parent conext of the function  above (arguments.callee - but deprecated)\r\n    */\r\n    perform:function(callback,context) {\r\n      if(this.aManager.isDegenerate()){callback([])} //do nothing if no segments\r\n      else{\r\n        var t0 = performance.now();\r\n        this._doAnnealing();\r\n        this.dodebug('overlapping labels count = '+this.aManager.countOverlappedLabels(true)+\r\n                     ', total labels count = '+this.aManager.curset.length+', iterations = '+this.aManager.iterations);\r\n        this.dodebug('time to annealing = '+(performance.now()-t0));\r\n        if(this.aManager.hasAnywayOverlaps)this.dodebug('some labels are likely to overlap anyway here.')\r\n        callback.call(context,this.aManager.curset);\r\n        }\r\n    }\r\n  }\r\n  result.processOptions(options);\r\n  return result;\r\n}\r\n\r\n\r\nmodule.exports = simulatedAnnealing;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/simulatedAnnealing.js\n ** module id = 9\n ** module chunks = 0\n **/","var candidateGenerator = require(\"./CandidateGenerator.js\");\r\nvar geomEssentials = require(\"./geomEssentials.js\");\r\nvar clone = require('./third_party/clone');\r\n\r\nvar autoLabelManager = function(all_items){\r\n  var result = {\r\n    items:all_items,\r\n    curset:[],\r\n    curvalues:[],\r\n    conflictMatrix:[],\r\n    _oldvalues:[],\r\n    _oldset:[],\r\n    hasAnywayOverlaps:false,\r\n    overlap_count:function(){\r\n      return (this.curvalues.length>0)?this.curvalues[this.curvalues.length-1]:0;\r\n    },\r\n\r\n    isDegenerate:function(){\r\n      return this.items.length ==0;\r\n    },\r\n\r\n    saveOld:function(){\r\n      this._oldvalues = this.curvalues.slice(0); //TOFIX no deep clone actually\r\n      this._oldset =clone.clonePrototype(this.curset);\r\n    },\r\n\r\n    restoreOld:function(){\r\n      this.curvalues = this._oldvalues;\r\n      this.curset = this._oldset;\r\n    },\r\n\r\n    old_overlap_count:function(){\r\n      return (this._oldvalues.length>0)?this._oldvalues[this._oldvalues.length-1]:0;\r\n    },\r\n    /**\r\n    computes the random set of positions for text placement with angles and text values\r\n    @param {Array} all_items: an array with {t,segs} elements, according to t -text of the polyline, segs - its accepted segments to label on. Result array is generated from items of aMan array\r\n    @returns {Array} : an array with elements such as return values of computeLabelCandidate function\r\n    */\r\n    getInitialRandomState:function(){\r\n      this.compConflictMatrix();\r\n      this.curset=[];\r\n      for(var i=0;i<this.items.length;i++){\r\n        var candidate = candidateGenerator.computeLabelCandidate(i,this.items);\r\n        this.curset.push(candidate);\r\n      }\r\n    },\r\n\r\n    _testPossibleFitting:function(ind1,ind2){\r\n      //TODO\r\n      return true;\r\n    },\r\n\r\n    /**\r\n    Divides all_items into clusters (or builds a graph), such as:\r\n    cluster consists of items with potential label intersections, which are computed by intersecting each item's boundaries (itemPoly)\r\n    Also: if free-of-intersections part of item's poly is capable for containing item's label, then such item is moved to separate cluster\r\n    with only aMan item -> no further computation for aMan item at all\r\n    After finishing clustering -> we applying simulatedAnnealing to each cluster independently, and thus, potentially, we\r\n    decrease degree of a problem.\r\n    @param {Array} all_items:\r\n    @returns {Array}: two-dim array if clusters first level, indices of items secodn level.\r\n    */\r\n    compConflictMatrix:function(){\r\n      this.conflictMatrix=[];\r\n      for(var i in this.items){\r\n        for(var j in this.items)if(i>j){\r\n          var curClip=geomEssentials.clipPoly(this.items[i].getItemPoly(),this.items[j].getItemPoly());\r\n          if(curClip.length>0 && this._testPossibleFitting(i,j)){\r\n            this.conflictMatrix.push([i,j,0,false]);//i,j,overlapCount for this pair, if overlaps anyway\r\n            this.curvalues.push(0);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    markOveralppedLabels:function(includeAnywayOverlaps){\r\n        for(var i in this.conflictMatrix){\r\n          if(this.curvalues[i]>0 || (includeAnywayOverlaps && this.conflictMatrix[i][3])){\r\n            var ij = this.conflictMatrix[i];\r\n            this.curset[ij[0]].overlaps = true;\r\n            this.curset[ij[1]].overlaps = true;\r\n          }\r\n        }\r\n    },\r\n\r\n    countOverlappedLabels:function(includeAnywayOverlaps){\r\n      var result=0;\r\n      this.markOveralppedLabels(includeAnywayOverlaps);\r\n      for(var i in this.curset)if(this.curset[i].overlaps){\r\n        result++;\r\n      }\r\n      return result;\r\n    },\r\n\r\n    /**\r\n    swaps position for a random label with another from this label's positions pool\r\n    @param {Number} index : index of label in all_items to select new random position from availavle choices.\r\n    @param {Array} curset: currently selected label postions\r\n    @param {Array} all_items: all available postions\r\n    @memberof MapAutoLabelSupport#\r\n    */\r\n    swapCandidateInLabelSetToNew:function(idx){\r\n      var label_index = this.curset[idx].all_items_index();\r\n      var new_candidate = candidateGenerator.computeLabelCandidate(label_index,this.items);\r\n      new_candidate.wasSwapped=true;\r\n      this.curset[idx]=new_candidate; //TOFIX - error is here\r\n    },\r\n\r\n    applyNewPosToOverlappedLabels:function(){\r\n      this.markOveralppedLabels();\r\n      for(var i in this.curset){\r\n        if(this.curset[i].overlaps){\r\n          this.swapCandidateInLabelSetToNew(i);\r\n          this.curset[i].overlaps=false;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return result;\r\n}\r\n\r\nmodule.exports = autoLabelManager;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/autoLabelManager.js\n ** module id = 10\n ** module chunks = 0\n **/","var geomEssentials = require('./geomEssentials.js');\r\nvar itemFactory = require('./LabelItem.js');\r\n\r\nvar candidateGenerator = {\r\n  options:{\r\n    lineDiscreteStepPx:3\r\n  },\r\n\r\n  /**\r\n  @param {PointItem} item\r\n  @returns {Array} : a poly bounding text, placed somewhere in point's available domain\r\n  */\r\n  obtainCandidateForPoint:function(item){\r\n    var avOriginsSize = item._availableOrigins.getSize();\r\n    var randomX =item._availableOrigins.min.x + Math.random() * avOriginsSize.x;\r\n    var randomY =item._availableOrigins.min.y + Math.random() * avOriginsSize.y;\r\n    var candidate = itemFactory.candidatePosition(L.point(randomX,randomY - item.txSize.y),item);\r\n    candidate.poly();\r\n    return candidate;\r\n  },\r\n\r\n  obtainCandidateForPoly:function(polygon){\r\n    //TODO[obtainCandidateForPoly]\r\n  },\r\n\r\n  /**\r\n  Get a poly (simple with no text along path)for random offset on the polyline\r\n  @param {LineItem} item: item from prepareCollectedData's allsegs\r\n  @returns {Array} : a poly bounding text, placed on corresponding point for offset on poluline and rotated to match segment's skew\r\n  */\r\n  obtainCandidateForPolyLineByRandomStartOffset:function(item){\r\n    var random_offset =(item.totalLength - item.txSize.x>0) ?  (item.totalLength - item.txSize.x)*Math.random():0;\r\n    var candidate = itemFactory.candidatePosition(random_offset,item);\r\n    return candidate;\r\n  },\r\n\r\n  /**\r\n  computes label candidate object to place on map\r\n  @param {Number} i: an index in all_items array to obtain label candidate for i-item\r\n  @returns {candidatePosition} : generated candidate\r\n  */\r\n  computeLabelCandidate:function(i,all_items) {\r\n    var candidate;\r\n    switch (all_items[i].layer_type()) {\r\n      case 0:{\r\n          candidate = this.obtainCandidateForPoint(all_items[i]);\r\n          break;\r\n      }\r\n      case 1:{\r\n          candidate=this.obtainCandidateForPolyLineByRandomStartOffset(all_items[i]);\r\n          break;\r\n        }\r\n      case 2:\r\n        break;\r\n    }\r\n    return candidate;\r\n  },\r\n}\r\n\r\nmodule.exports = candidateGenerator;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/CandidateGenerator.js\n ** module id = 11\n ** module chunks = 0\n **/","/*\r\nmodlue to create labelItems convenient for labelling and calculation\r\n*/\r\n\r\nvar geomEssentials = require('./geomEssentials.js');\r\n\r\nvar minTolerativeDistancePx = 5; //const\r\n\r\nvar layerType = function(layer){\r\n  return (layer instanceof L.Polyline)?1:\r\n         (layer instanceof L.Polygon)?2:\r\n         0; //Marker || CircleMarker\r\n}\r\n\r\nvar BasicMixin = {\r\n  data:[],\r\n  text:'',\r\n  style:'',\r\n  txSize:0,\r\n  layer:null,\r\n  host:null,\r\n  _itemPoly:false, //all available textlabel positions for this label comin in 1 polygon\r\n  ignoreWhileLabel:false,\r\n  isDegenerate:false,\r\n  index:function(){\r\n    return this.host.lastIndexOf(this);\r\n  },\r\n  layer_type:function(){\r\n    if(!this._layer_type)this._layer_type = layerType(this.layer);\r\n    return this._layer_type;\r\n  },\r\n\r\n  /**\r\n  get all available positions for this item. Depending on layer_type -> diff funcs.\r\n  Used in clustering computation\r\n  */\r\n  getItemPoly:function(){\r\n    if(!this._itemPoly){\r\n      this._itemPoly =  this._getBoundary();\r\n    }\r\n    return this._itemPoly;\r\n  },\r\n  initializeBase:function(options){\r\n    this.text=options.text; this.style = options.style; this.layer = options.layer; this.host = options.hostArray; this.txSize = options.txSize;\r\n  }\r\n}\r\n\r\nvar PointItem = L.Class.extend({\r\n  initialize:function(options){\r\n    this.initializeBase(options);\r\n  },\r\n\r\n  _getBoundary: function(){\r\n    var pixelBounds = this.layer._map.getPixelBounds();\r\n    var pixelOrigin = this.layer._map.getPixelOrigin();\r\n    var mapBounds = L.bounds(pixelBounds.min.subtract(pixelOrigin),\r\n                             pixelBounds.max.subtract(pixelOrigin));\r\n    this._textDomain =  geomEssentials.getPointTextDomain(this.data,this.txSize,mapBounds);\r\n    return geomEssentials.boundsToPointArray(this._textDomain);\r\n  },\r\n\r\n  computeItemTypeSpecificData:function(){\r\n    this.getItemPoly();\r\n    this._availableOrigins = geomEssentials.getAvailableTextOriginBounds(this._textDomain,this.txSize);\r\n  },\r\n\r\n  readData:function(){\r\n    var ll = this.layer.getLatLng();\r\n    this.data = this.layer._map.latLngToLayerPoint(ll);\r\n    this._simplePoly = geomEssentials.getSimplePolyText(this.data,this.txSize);\r\n  }\r\n})\r\n\r\nPointItem.include(BasicMixin);\r\n\r\nvar LineItem = L.Class.extend({\r\n  initialize:function(options){\r\n    this.initializeBase(options)\r\n    this.computed_lengths=[];\r\n    this.totalLength=0;\r\n    if(this.layer._parts.length===0)this.isDegenerate = true;\r\n  },\r\n\r\n  _getBoundary: function(){\r\n    return geomEssentials.computeLineBoundaryPolygon(this.data,this.txSize.y);\r\n  },\r\n\r\n  /**\r\n  Calculates total length for this polyline on screen, and lengths of each segments with their angles\r\n  */\r\n  computeItemTypeSpecificData:function(){\r\n    this.totalLength=0;\r\n    this.computed_lengths = geomEssentials.computeSegmentsLengths(this.data);\r\n    for(var k=0;k<this.computed_lengths.length;k++){\r\n      this.totalLength+=this.computed_lengths[k];\r\n    }\r\n    this.ignoreWhileLabel=this.totalLength<this.txSize.x;\r\n  },\r\n\r\n  //orig part\r\n  readData:function(partIndex){ //to read consequently\r\n    if(!partIndex){var partIndex=0;};\r\n    var nextPart = partIndex;\r\n    this.data = this.layer._parts[partIndex];\r\n    this.partIndex=partIndex; //store this to have ability to compute totalOffset, for example\r\n    //while(nextPart<this.layer._parts.length){\r\n    // NEEDS TO BE FINISHED\r\n    var nextPart=partIndex+1;\r\n    if(nextPart<this.layer._parts.length){\r\n      var notClonedNow=true;\r\n      while((this.layer._parts[partIndex][this.layer._parts[partIndex].length-1].distanceTo(this.layer._parts[nextPart][0])<minTolerativeDistancePx)\r\n             &&(nextPart+1<this.layer._parts.length)){\r\n        if(notClonedNow)this.data = this.layer._parts[partIndex].slice(0);\r\n        Array.prototype.push.apply(this.data, this.layer._parts[nextPart].slice(0));\r\n        partIndex++;\r\n        nextPart++;\r\n      }\r\n      return nextPart;\r\n    }else return false;\r\n  },\r\n\r\n  segCount:function(){return this.data.length -1},\r\n\r\n  /**\r\n  Get a segment from polyline part by it's offset\r\n  @param {Number} offset: na offset for the polyline\r\n  @returns {Array} : index of start point of segment and dist which is offset from start of the line to the end of found segment\r\n  */\r\n  getSegmentIdxAndDistByOffset:function(offset){\r\n    return geomEssentials.getSegmentIdxAndDistByOffset(offset,this.data,this.computed_lengths);\r\n  }\r\n});\r\n\r\nLineItem.include(BasicMixin);\r\n\r\nmodule.exports = {\r\n  /**\r\n  a factory function for label items\r\n  @param {String} text:\r\n  @param {String} style: text style\r\n  @param {L.Point} txSize: size of bounding box for txNode\r\n  @param {L.Layer} layer: a feature (Marker, Polyline, Path) to aquire data\r\n  */\r\n  labelItem:function(text,style,txSize,layer,hostArray){\r\n    var ltype= layerType(layer);\r\n    var opts = {text:text,style:style,txSize:txSize,layer:layer,hostArray:hostArray};\r\n    var result=false;\r\n    switch (ltype) {\r\n      case 0:\r\n        result = new PointItem(opts);\r\n        break;\r\n      case 1:\r\n        result= new LineItem(opts);\r\n        break;\r\n    }\r\n    return (!result.isDegenerate)?result:false;\r\n  },\r\n\r\n  candidatePosition:function(offset_or_origin,item){\r\n    return {\r\n      _item:item,\r\n      offset_or_origin:offset_or_origin,\r\n      _poly:false,\r\n\r\n      all_items_index:function(){\r\n        return this._item.index();\r\n      },\r\n\r\n      /**\r\n      Used for calculationg overlaps for text along path (textPath SVG).\r\n      TODO avoid or smooth sharp angles to keep text fully visible\r\n      @param {Number} start_offset: global offset for this polyline (item), same as used in rendering\r\n      @param {LabelItem} item:\r\n      @returns {Array} : a poly bounding curved text\r\n      */\r\n      _computePolyForLine:function(){\r\n        var subPolyline = geomEssentials.extractSubPolyline(\r\n          this.offset_or_origin,\r\n          this.offset_or_origin + this._item.txSize.x,\r\n          this._item.data,this._item.computed_lengths);\r\n        return geomEssentials.computeLineBoundaryPolygon(subPolyline,item.txSize.y);\r\n      },\r\n\r\n      _computePolyForPoint:function(){\r\n        return geomEssentials.movePolyByAdding(this._item._simplePoly,this.offset_or_origin);\r\n      },\r\n\r\n      /**\r\n      common function switch for computing poly for different layer_types\r\n      */\r\n      _computePoly:function(){\r\n        switch(this._item.layer_type()){\r\n          case 0:{\r\n            this._poly = this._computePolyForPoint();\r\n            break;\r\n          }\r\n          case 1:{\r\n              this._poly = this._computePolyForLine();\r\n              break;\r\n            }\r\n          case 2:break;\r\n        }\r\n      },\r\n\r\n      poly:function(){\r\n        if(!this._poly)this._computePoly();\r\n        return this._poly;\r\n      }\r\n    }\r\n  },\r\n\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/LabelItem.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\r\nModule to extract sufficient info to label data on the map\r\n*/\r\n\r\n\"use strict\";\r\n\r\nvar DOMEssentials = require(\"./DOMEssentials.js\");\r\nvar geomEssentials = require(\"./geomEssentials.js\");\r\nvar itemFactory = require('./LabelItem.js');\r\n\r\nvar dataReader = {\r\n  /**\r\n  creates an array of features's segments for each feature  of layers2label's layers on screen along with SVG text corresponding to\r\n  @returns [Array] returns an array with values : {t:{content_node:SVG textnode},parts:feature parts,layertype}, then, in next funcs we add apoly param to t object, ir, its bounding polygon, layertype = 0 marker, 1 polyline, 2 polygon\r\n  */\r\n  readDataToLabel:function(){\r\n    var pt  =[],count=0;\r\n    if(this._map){\r\n      for(var i in this._map.autoLabeler._layers2label)\r\n      if(this._map.getZoom()>this._map.autoLabeler._layers2label[i]._al_options.zoomToStartLabel)\r\n      {\r\n        var lg=this._map.autoLabeler._layers2label[i],\r\n            map_to_add = this._map;\r\n        lg.eachLayer(function(layer){\r\n          if(layer.feature)\r\n          if(layer.feature.properties[lg._al_options.propertyName]){\r\n            var text=layer.feature.properties[lg._al_options.propertyName],\r\n                style=lg._al_options.labelStyle,\r\n                node = DOMEssentials.createSVGTextNode(text,style),\r\n                size = DOMEssentials.getBoundingBox(map_to_add,node); //compute ortho aligned bbox for this text, only once, common for all cases\r\n            if(layer._path)if(layer._parts)if(layer._parts.length>0){\r\n              var id = 'pathautolabel-' + L.Util.stamp(layer);\r\n              layer._path.setAttribute('id',id);\r\n              layer.feature.properties.alabel_offset=\"\";\r\n              count++;\r\n            }\r\n            var firstItem = itemFactory.labelItem(text,style,size,layer,pt)\r\n            if(firstItem){\r\n              //TOOO [readData] if last point of prev part is equal to fisrt of next part -> use one item for these\r\n              var nextPartIndex=firstItem.readData();\r\n              pt.push(firstItem);\r\n              while(nextPartIndex){\r\n                var item = itemFactory.labelItem(text,style,size,layer,pt); //create node template\r\n                nextPartIndex=item.readData(nextPartIndex);\r\n                pt.push(item);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return pt;\r\n  },\r\n\r\n  /**\r\n  extracts good segments from available polyline parts and converts to use in next procedures of pos estimation\r\n  @param {Array} all_items:\r\n  @param {Set} options: options are:  {integer} maxlabelcount: if more labels in all_items, then do nothing\r\n  */\r\n  prepareCollectedData:function(all_items,options){\r\n    options = options || {};\r\n    options.maxlabelcount=options.maxlabelcount || 100;\r\n    if(all_items.length>options.maxlabelcount || all_items.length==0){\r\n      this._map.autoLabeler._dodebug('too much OR no labels to compute('+all_items.length+')');\r\n      return false;\r\n    }\r\n    var i=all_items.length-1;\r\n    while(i>=0)\r\n    {\r\n      all_items[i].computeItemTypeSpecificData();\r\n      if(all_items[i].ignoreWhileLabel)all_items.splice(i,1); //remove if item does not suit it's label for some reason\r\n      i--;\r\n    }\r\n    return true;\r\n  },\r\n}\r\n\r\nmodule.exports = dataReader;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/DataReader.js\n ** module id = 13\n ** module chunks = 0\n **/","\r\nvar featureGenerator = {\r\n  _bounds:null, //latlng\r\n  _pointsLayer:null,\r\n  _map:null,\r\n\r\n  setBounds:function(bounds){\r\n   if(!bounds && !this._bounds)this.setMapBounds();\r\n   this._bounds = bounds;\r\n  },\r\n\r\n  setMapBounds:function(){\r\n    this._bounds = this._map.getBounds();\r\n  },\r\n\r\n  createLayers:function(onlycheck) {\r\n    this._pointsLayer =(this._pointsLayer && onlycheck)?this._pointsLayer : L.featureGroup().addTo(this._map);\r\n    this._pointsLayer =(this._polysLayer && onlycheck)?this._polysLayer : L.featureGroup().addTo(this._map);\r\n    this._pointsLayer =(this._linesLayer && onlycheck)?this._linesLayer : L.featureGroup().addTo(this._map);\r\n  },\r\n\r\n  _genWord:function(length){\r\n    var result=\"\"\r\n    for(var i=0;i<length;i++)result+=\"A\";\r\n    return result;\r\n  },\r\n\r\n  genPoints:function(count,wordlength){\r\n    this._pointsLayer.clearLayers();\r\n    if(!this._bounds)this.setMapBounds();\r\n    var minx = this._bounds.getWest(), dx = this._bounds.getEast() - minx, miny = this._bounds.getNorth(), dy = this._bounds.getSouth() - miny;\r\n    for(var i=0;i<count;i++){\r\n      var pos = L.latLng(miny + Math.random()*dy,minx+Math.random()*dx);\r\n      var marker = L.circleMarker(pos);\r\n      if(!marker.feature)marker.feature = {};\r\n      if(!marker.feature.properties)marker.feature.properties = {};\r\n      marker.feature.properties.name = this._genWord(wordlength) +'_'+i;\r\n      this._pointsLayer.addLayer(marker);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = featureGenerator;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/featureGenerator.js\n ** module id = 14\n ** module chunks = 0\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/index.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js\n ** module id = 17\n ** module chunks = 0\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/ieee754/index.js\n ** module id = 18\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/isarray/index.js\n ** module id = 19\n ** module chunks = 0\n **/","var clone = (function() {\n'use strict';\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (parent instanceof nativeMap) {\n      child = new nativeMap();\n    } else if (parent instanceof nativeSet) {\n      child = new nativeSet();\n    } else if (parent instanceof nativePromise) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else if (parent instanceof Error) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (parent instanceof nativeMap) {\n      var keyIterator = parent.keys();\n      while(true) {\n        var next = keyIterator.next();\n        if (next.done) {\n          break;\n        }\n        var keyChild = _clone(next.value, depth - 1);\n        var valueChild = _clone(parent.get(next.value), depth - 1);\n        child.set(keyChild, valueChild);\n      }\n    }\n    if (parent instanceof nativeSet) {\n      var iterator = parent.keys();\n      while(true) {\n        var next = iterator.next();\n        if (next.done) {\n          break;\n        }\n        var entryChild = _clone(next.value, depth - 1);\n        child.add(entryChild);\n      }\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/third_party/clone/clone.js\n ** module id = 20\n ** module chunks = 0\n **/"],"sourceRoot":""}